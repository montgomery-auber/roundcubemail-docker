name: Build Docker image
on: [push, pull_request]
jobs:
  build-and-testvariants:
    name: Build image variants and run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        include:
          - variant: 'apache'
            test-files: 'apache-postgres'
            docker-tag: montgomeryauber/roundcubemail:latest,montgomeryauber/roundcubemail:1.6.x-apache,montgomeryauber/roundcubemail:1.6.0-apache,montgomeryauber/roundcubemail:latest-apache
          - variant: 'fpm'
            test-files: 'fpm-postgres'
            docker-tag: montgomeryauber/roundcubemail:1.6.x-fpm,montgomeryauber/roundcubemail:1.6.0-fpm,montgomeryauber/roundcubemail:latest-fpm
          - variant: 'fpm-alpine'
            test-files: 'fpm-postgres'
            docker-tag: montgomeryauber/roundcubemail:1.6.x-fpm-alpine,montgomeryauber/roundcubemail:1.6.0-fpm-alpine,montgomeryauber/roundcubemail:latest-fpm-alpine
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get docker hub username
        id: creds
        run: echo '::set-output name=username::${{ secrets.DOCKER_PULL_USERNAME }}'
      - name: Login to Docker Hub
        if: steps.creds.outputs.username != ''
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_PULL_USERNAME }}
          password: ${{ secrets.DOCKER_PULL_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Build and push image for "${{ matrix.variant }}"
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.variant }}
          platforms: "linux/s390x,linux/ppc64le,linux/arm,linux/386,linux/amd64,linux/arm64/v8"
          push: true 
          tags: ${{ matrix.docker-tag }}

      - name: Run tests
        env:
          ROUNDCUBEMAIL_TEST_IMAGE: ${{ secrets.DOCKER_PULL_USERNAME }}/${{ matrix.docker-tag }}
        run: |
          set -exu;
          for testFile in ${{ join(matrix.test-files, ' ') }};
          do
            docker-compose -f ./tests/docker-compose.test-${testFile}.yml \
            up --exit-code-from=sut --abort-on-container-exit
          done
# does not work - linux/mips64le

#platforms: "linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8,linux/s390x,linux/arm64"
#Most of the Docker Official Images on Docker Hub provide a variety of architectures. For example, the busybox image supports amd64, arm32v5, arm32v6, arm32v7, arm64v8, i386, ppc64le, and s390x. When running this image on an x86_64 / amd64 machine, the amd64 variant is pulled and run.
#https://github.com/sudo-bot/docker-phpmyadmin-snapshots/blob/28d025bff39dd1ded8d581a9e5c079fa3cb9fdf7/.github/workflows/publish.yml#L37
#PLATFORM: "linux/386,linux/amd64,linux/arm/v5,linux/arm/v7,linux/arm64/v8,linux/mips64le,linux/ppc64le,linux/s390x"
          
